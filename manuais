#!/bin/bash
# Script para gerenciar e visualizar tutoriais

# Caminho para a pasta onde estão os tutoriais
TUTORIALS_DIR="/tutoriais"

# Verificar se a pasta /tutoriais existe
if [ ! -d "$TUTORIALS_DIR" ]; then
    echo "A pasta $TUTORIALS_DIR não existe. Criando..."
    sudo mkdir -p "$TUTORIALS_DIR"
    sudo chmod 755 "$TUTORIALS_DIR"
    echo "Pasta $TUTORIALS_DIR criada com permissões de leitura para todos os usuários."
fi

# Verificar se a pasta está vazia - adicionando exit code para garantir verificação correta
if [ -z "$(ls -A "$TUTORIALS_DIR" 2>/dev/null)" ]; then
    echo "A pasta $TUTORIALS_DIR está vazia."

    # Loop infinito até que um repositório válido seja fornecido
    repo_url=""
    while [ -z "$repo_url" ]; do
        echo -n "Por favor, forneça o link do repositório Git para clonar: "
        read repo_url </dev/tty
        
        if [ -z "$repo_url" ]; then
            echo "É necessário fornecer um repositório. Por favor, tente novamente."
            continue  # Volta ao início do loop sem tentar clonar
        fi
        
        # Verificar se o URL parece ser válido (verificação básica)
        if [[ "$repo_url" == *"github.com"* || "$repo_url" == git@* ]]; then
            echo "Clonando repositório: $repo_url"
            
            # Clonar diretamente para /tutoriais (com sudo)
            if sudo git clone "$repo_url" "$TUTORIALS_DIR"; then
                echo "Repositório clonado com sucesso para $TUTORIALS_DIR."

                # **Tornar a pasta somente leitura para todos os usuários**
                sudo chmod -R a-w "$TUTORIALS_DIR"
                echo "A pasta $TUTORIALS_DIR agora é somente leitura."
                
                break  # Sai do loop quando tudo for concluído com sucesso
            else
                echo "Falha ao clonar o repositório. Verifique o URL e tente novamente."
                repo_url=""  # Reset para continuar no loop
            fi
        else
            echo "O URL fornecido não parece ser um repositório Git válido. Tente novamente."
            repo_url=""  # Reset para continuar no loop
        fi
    done
else
    echo "A pasta $TUTORIALS_DIR já contém arquivos."
fi

# Verificar se o script já está instalado no /bin
SCRIPT_NAME="manuais"
INSTALL_DIR="/bin"

# Baixar o script para um local temporário
TMP_FILE="/tmp/$SCRIPT_NAME"

if [ ! -f "$INSTALL_DIR/$SCRIPT_NAME" ]; then
    echo "Instalando o script $SCRIPT_NAME no diretório $INSTALL_DIR..."
    sudo cp "$TMP_FILE" "$INSTALL_DIR/$SCRIPT_NAME"
    sudo chmod +x "$INSTALL_DIR/$SCRIPT_NAME"
    echo "Script instalado com sucesso em $INSTALL_DIR/$SCRIPT_NAME."
else
    echo "O script $SCRIPT_NAME já está instalado no diretório $INSTALL_DIR."
fi

# Recarregar .bashrc
source ~/.bashrc

# Agora sim, depois de todas as verificações, abrimos o fzf
# Abrir o fzf para listar arquivos e capturar o selecionado
selected_file=$(find "$TUTORIALS_DIR" -type f 2>/dev/null | fzf --prompt="Selecione um arquivo: ")

# Verificar se um arquivo foi selecionado
if [[ -n "$selected_file" ]]; then
    # Abrir o arquivo com o Frogmouth
    frogmouth "$selected_file"
else
    echo "Nenhum arquivo selecionado."
fi
