#!/bin/bash
# Script para gerenciar e visualizar tutoriais

# Caminho para a pasta onde estão os tutoriais
TUTORIALS_DIR="/tutoriais"

# Verificar se a pasta /tutoriais existe
if [ ! -d "$TUTORIALS_DIR" ]; then
    echo "A pasta $TUTORIALS_DIR não existe. Criando..."
    sudo mkdir -p "$TUTORIALS_DIR"
    sudo chmod 755 "$TUTORIALS_DIR"
    echo "Pasta $TUTORIALS_DIR criada com permissões de leitura para todos os usuários."
fi

# Verificar se a pasta está vazia - adicionando exit code para garantir verificação correta
if [ -z "$(ls -A $TUTORIALS_DIR 2>/dev/null)" ]; then
    echo "A pasta $TUTORIALS_DIR está vazia."
    
    # Loop infinito até que um repositório válido seja fornecido
    while true; do
        read -p "Por favor, forneça o link do repositório Git para clonar: " repo_url
        
        if [ -n "$repo_url" ]; then
            # Verificar se o URL parece ser válido (verificação básica)
            if [[ "$repo_url" == *"github.com"* || "$repo_url" == git@* ]]; then
                echo "Clonando repositório: $repo_url"
                
                # Clonar temporariamente
                temp_dir=$(mktemp -d)
                if git clone "$repo_url" "$temp_dir"; then
                    # Verificar se o clone foi bem-sucedido
                    if [ -n "$(ls -A $temp_dir 2>/dev/null)" ]; then
                        # Garantir que o diretório de destino existe
                        mkdir -p "$TUTORIALS_DIR"
                        
                        # Copiar conteúdo (não a pasta) para /tutoriais
                        cp -r "$temp_dir"/* "$TUTORIALS_DIR"/ 2>/dev/null
                        
                        # Remover diretório temporário
                        rm -rf "$temp_dir"
                        
                        echo "Conteúdo do repositório clonado para $TUTORIALS_DIR."
                        break  # Sai do loop quando tudo for concluído com sucesso
                    else
                        echo "O repositório parece estar vazio. Tente novamente."
                        rm -rf "$temp_dir"
                    fi
                else
                    echo "Falha ao clonar o repositório. Verifique o URL e tente novamente."
                    rm -rf "$temp_dir"
                fi
            else
                echo "O URL fornecido não parece ser um repositório Git válido. Tente novamente."
            fi
        else
            echo "É necessário fornecer um repositório. Por favor, tente novamente."
        fi
    done
fi

# Verificar se o script já está instalado no /bin
SCRIPT_NAME="manuais"
if [ ! -f "/bin/$SCRIPT_NAME" ]; then
    echo "Instalando o script $SCRIPT_NAME no diretório /bin..."
    sudo cp "$0" "/bin/$SCRIPT_NAME"
    sudo chmod +x "/bin/$SCRIPT_NAME"
    
    # Adicionar ao .bashrc se não existir
    if ! grep -q "alias $SCRIPT_NAME=" "$HOME/.bashrc"; then
        echo "alias $SCRIPT_NAME='$SCRIPT_NAME'" >> "$HOME/.bashrc"
        echo "Script instalado e alias adicionado ao .bashrc."
        source "$HOME/.bashrc" 2>/dev/null || echo "Execute 'source ~/.bashrc' para usar imediatamente."
    else
        echo "Alias para $SCRIPT_NAME já existe no .bashrc."
    fi
else
    echo "O script $SCRIPT_NAME já está instalado no diretório /bin."
fi

# Agora sim, depois de todas as verificações, abrimos o fzf
# Abrir o fzf para listar arquivos e capturar o selecionado
selected_file=$(find "$TUTORIALS_DIR" -type f 2>/dev/null | fzf --prompt="Selecione um arquivo: ")

# Verificar se um arquivo foi selecionado
if [[ -n "$selected_file" ]]; then
    # Abrir o arquivo com o Frogmouth
    frogmouth "$selected_file"
else
    echo "Nenhum arquivo selecionado."
fi
